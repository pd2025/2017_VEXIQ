<Version>1.0.1</Version>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getJoystickValue(BtnFUp)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="float">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="resetTimer">
    <Parameters>
        <Parameter name="currentTimer" type="base typedef" default="T1" typeDef="TTimers">T1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="RepeatUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getTimer(T1, seconds)</Parameter>
        <Parameter name="operator" type="typedef">&gt;</Parameter>
        <Parameter name="RHS" type="float">600</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="IfThen">
    <Parameters>
        <Parameter name="LHS" type="typedef">getJoystickValue(BtnRUp)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="float">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setJoystickScale">
    <Parameters>
        <Parameter name="nScaledPercentage" type="short" default="100">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="tankControl">
    <Parameters>
        <Parameter name="rightJoystick" type="base typedef" default="ChD" typeDef="TVexJoysticks">ChD</Parameter>
        <Parameter name="leftJoystick" type="base typedef" default="ChA" typeDef="TVexJoysticks">ChA</Parameter>
        <Parameter name="threshold" type="short" default="10">10</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="armControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="motor10" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="upButton" type="base typedef" default="BtnLUp" typeDef="TVexJoysticks">BtnLUp</Parameter>
        <Parameter name="downButton" type="base typedef" default="BtnLDown" typeDef="TVexJoysticks">BtnLDown</Parameter>
        <Parameter name="armSpeed" type="short" default="75">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="armControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="motor10" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="upButton" type="base typedef" default="BtnLUp" typeDef="TVexJoysticks">BtnEUp</Parameter>
        <Parameter name="downButton" type="base typedef" default="BtnLDown" typeDef="TVexJoysticks">BtnEDown</Parameter>
        <Parameter name="armSpeed" type="short" default="75">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="else"/>

<ProgrammingBlock type="functionCall" function="setJoystickScale">
    <Parameters>
        <Parameter name="nScaledPercentage" type="short" default="100">100</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="tankControl">
    <Parameters>
        <Parameter name="rightJoystick" type="base typedef" default="ChD" typeDef="TVexJoysticks">ChD</Parameter>
        <Parameter name="leftJoystick" type="base typedef" default="ChA" typeDef="TVexJoysticks">ChA</Parameter>
        <Parameter name="threshold" type="short" default="10">10</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="armControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="motor10" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="upButton" type="base typedef" default="BtnLUp" typeDef="TVexJoysticks">BtnLUp</Parameter>
        <Parameter name="downButton" type="base typedef" default="BtnLDown" typeDef="TVexJoysticks">BtnLDown</Parameter>
        <Parameter name="armSpeed" type="short" default="75">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="armControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="motor10" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="upButton" type="base typedef" default="BtnLUp" typeDef="TVexJoysticks">BtnEUp</Parameter>
        <Parameter name="downButton" type="base typedef" default="BtnLDown" typeDef="TVexJoysticks">BtnEDown</Parameter>
        <Parameter name="armSpeed" type="short" default="75">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="loop" loopType="IfOnly">
    <Parameters>
        <Parameter name="LHS" type="typedef">getJoystickValue(BtnEDown)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="float">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMultipleMotors">
    <Parameters>
        <Parameter name="speed" type="short" default="50">30</Parameter>
        <Parameter name="firstMotor" type="base typedef" default="motor1" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="secondMotor" type="base typedef" default="noMotor" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="thirdMotor" type="base typedef" default="noMotor" typeDef="tMotor">noMotor</Parameter>
        <Parameter name="fourthMotor" type="base typedef" default="noMotor" typeDef="tMotor">noMotor</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getDistanceValue(distanceMM)</Parameter>
        <Parameter name="operator" type="typedef">&lt;</Parameter>
        <Parameter name="RHS" type="float">65</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="stopMultipleMotors">
    <Parameters>
        <Parameter name="firstMotor" type="base typedef" default="motor1" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="secondMotor" type="base typedef" default="noMotor" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="thirdMotor" type="base typedef" default="noMotor" typeDef="tMotor">noMotor</Parameter>
        <Parameter name="fourthMotor" type="base typedef" default="noMotor" typeDef="tMotor">noMotor</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="loop" loopType="IfOnly">
    <Parameters>
        <Parameter name="LHS" type="typedef">getJoystickValue(BtnFDown)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="float">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" default="motor1" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="speed" type="short" default="50">-50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getBumperValue(bumpSwitch)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="float">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" default="motor10" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="quantity" type="float" default="1">1.21</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMotorBrakeMode">
    <Parameters>
        <Parameter name="nMotorIndex" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="nBrakeMode" type="base typedef" typeDef="TMotorBrakeModes">motorHold</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(Sensor, port2,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port5,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, openLoop, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, port2,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port5,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, openLoop, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	waitUntil (getJoystickValue(BtnFUp) == 1);
	resetTimer(T1);
	repeatUntil (getTimer(T1, seconds) &gt; 600) {
		if (getJoystickValue(BtnRUp) == 1) {
			setJoystickScale(50);
			tankControl(ChD, ChA, 10);
			armControl(armMotor, BtnLUp, BtnLDown, 50);
			armControl(clawMotor, BtnEUp, BtnEDown, 50);
		} else {
			setJoystickScale(100);
			tankControl(ChD, ChA, 10);
			armControl(armMotor, BtnLUp, BtnLDown, 50);
			armControl(clawMotor, BtnEUp, BtnEDown, 50);
		}
		if (getJoystickValue(BtnEDown) == 1) {
			setMultipleMotors(30, rightMotor, leftMotor, noMotor, noMotor);
			waitUntil (getDistanceValue(distanceMM) &lt; 65);
			stopMultipleMotors(rightMotor, leftMotor, noMotor, noMotor);
		}
		if (getJoystickValue(BtnFDown) == 1) {
			setMotor(armMotor, -50);
			waitUntil (getBumperValue(bumpSwitch) == 1);
			moveMotor(armMotor, 1.21, rotations, 50);
			setMotorBrakeMode(armMotor, motorHold);
		}
	}
}
</CSource>
